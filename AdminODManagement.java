/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.oodj_assignment;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class AdminODManagement extends javax.swing.JFrame {

    /**
     * Creates new form AdminODManagement
     */
    public AdminODManagement() {
        initComponents();
        LCKTable();
        LCKTable2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        AssignB = new javax.swing.JButton();
        DeleteB = new javax.swing.JButton();
        EditB = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderReceiveTable = new javax.swing.JTable();
        IDF = new javax.swing.JTextField();
        NameF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        PriceF = new javax.swing.JTextField();
        StatusF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        StaffCombo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        DeliveryTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        jLabel11.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 153, 255));
        jLabel11.setText("Order Delivery Management");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Manage Delivery Staff");

        jLabel2.setText("Food ID:");

        jLabel3.setText("Food Name:");

        AssignB.setText("Assign");
        AssignB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignBActionPerformed(evt);
            }
        });

        DeleteB.setText("Delete");
        DeleteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBActionPerformed(evt);
            }
        });

        EditB.setText("Edit");
        EditB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBActionPerformed(evt);
            }
        });

        OrderReceiveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        OrderReceiveTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrderReceiveTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(OrderReceiveTable);

        jLabel4.setText("Delivery Status:");

        jLabel5.setText("Food Price:");

        jLabel6.setText("Delivery Staff: ");

        StaffCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        StaffCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(AssignB)
                                .addGap(73, 73, 73)
                                .addComponent(DeleteB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(EditB))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(42, 42, 42)
                        .addComponent(IDF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StatusF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(560, 560, 560))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(29, 29, 29)
                                .addComponent(PriceF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(StaffCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(IDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(PriceF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(StatusF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(StaffCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteB)
                    .addComponent(EditB)
                    .addComponent(AssignB))
                .addGap(40, 40, 40))
        );

        DeliveryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(DeliveryTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(454, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(309, 309, 309))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(124, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AssignBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignBActionPerformed
        File file = new File("DeliveryDetail.txt");

        if(IDF.getText().equals("")||NameF.getText().equals("")||PriceF.getText().equals("")||StatusF.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please Enter All Data!");

        }else{

            try {
                FileWriter FW = new FileWriter (file,true);
                BufferedWriter BW = new BufferedWriter(FW);
                String record = IDF.getText() + ":" + NameF.getText() + ":" + PriceF.getText() + ":" + StatusF.getText();
                BW.write(record);
                String data[] = {IDF.getText(),NameF.getText(),PriceF.getText(),StatusF.getText()};

                DefaultTableModel Table = (DefaultTableModel)DeliveryTable.getModel();

                Table.addRow(data);

                JOptionPane.showMessageDialog(this,"Add Data Successfully...!");
                IDF.setText("");
                NameF.setText("");
                PriceF.setText("");
                StatusF.setText("");
                BW.close();
                FW.close();

            }catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);

            }
        }
    }//GEN-LAST:event_AssignBActionPerformed

    private void OrderReceiveTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderReceiveTableMouseClicked
        DefaultTableModel Table = (DefaultTableModel)OrderReceiveTable.getModel();
        
        String id = Table.getValueAt(OrderReceiveTable.getSelectedRow(), 0).toString();
        String name = Table.getValueAt(OrderReceiveTable.getSelectedRow(), 1).toString();
        String price = Table.getValueAt(OrderReceiveTable.getSelectedRow(), 2).toString();
        String status = Table.getValueAt(OrderReceiveTable.getSelectedRow(), 3).toString();

        IDF.setText(id);
        NameF.setText(name);
        PriceF.setText(price);
        StatusF.setText(status);

    }//GEN-LAST:event_OrderReceiveTableMouseClicked

    private void DeleteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBActionPerformed
        DefaultTableModel Table = (DefaultTableModel)OrderReceiveTable.getModel();
        File file = new File("AdminDetail.txt");

        if(OrderReceiveTable.getSelectedRowCount()==1) {
            Table.removeRow(OrderReceiveTable.getSelectedRow());
            JOptionPane.showMessageDialog(this,"Delete Data Successfully...!");
            try {
                FileWriter FW = new FileWriter (file,false);
                BufferedWriter BW = new BufferedWriter(FW);
                BW.write("ID:Name:Phone No\n");
                for(int i = 0; i < OrderReceiveTable.getRowCount();i++){
                    for(int j = 0;j < OrderReceiveTable.getColumnCount(); j++){
                        BW.write(OrderReceiveTable.getModel().getValueAt(i,j)+":");
                    }
                    BW.write("\n");
                }
                BW.close();
                FW.close();
            }catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            if(OrderReceiveTable.getRowCount()==0){
                JOptionPane.showMessageDialog(this,"Table is Empty!");
            }else{
                JOptionPane.showMessageDialog(this,"Please Select A Row to Delete the Data!");
            }
        }
    }//GEN-LAST:event_DeleteBActionPerformed

    private void EditBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBActionPerformed
        DefaultTableModel Table = (DefaultTableModel)OrderReceiveTable.getModel();
        File file = new File("AdminDetail.txt");

        if(OrderReceiveTable.getSelectedRowCount()==1) {

            String id = IDF.getText();
            String name = NameF.getText();
            String price = PriceF.getText();
            String status = StatusF.getText();

            Table.setValueAt(id, OrderReceiveTable.getSelectedRow(),0);
            Table.setValueAt(name, OrderReceiveTable.getSelectedRow(),1);
            Table.setValueAt(price, OrderReceiveTable.getSelectedRow(),2);
            Table.setValueAt(status, OrderReceiveTable.getSelectedRow(),3);


            JOptionPane.showMessageDialog(this,"Update Successfully... !");

            try {
                FileWriter FW = new FileWriter (file,false);
                BufferedWriter BW = new BufferedWriter(FW);
                BW.write("ID:Name:Phone No\n");
                for(int i = 0; i < OrderReceiveTable.getRowCount();i++){
                    for(int j = 0;j < OrderReceiveTable.getColumnCount(); j++){
                        BW.write(OrderReceiveTable.getModel().getValueAt(i,j)+":");
                    }
                    BW.write("\n");
                }
                BW.close();
                FW.close();
            }catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            if(OrderReceiveTable.getRowCount()==0){
                JOptionPane.showMessageDialog(this,"Table is Empty !");
            }else{
                JOptionPane.showMessageDialog(this,"Please Select A Row to Update the Data!");
            }
        }
    }//GEN-LAST:event_EditBActionPerformed

    private void StaffComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StaffComboActionPerformed

    
    public void LCKTable() {

       File itemfile = new File("OrderReceive.txt");

        try {   
            if (itemfile.createNewFile()) {
                FileOutputStream opFile = new FileOutputStream(itemfile, false);
            } else {
                FileReader fr = new FileReader(itemfile);
                BufferedReader br = new BufferedReader(fr);
                String rec = br.readLine().trim();
                String[] colHeader = rec.split(":");

                DefaultTableModel Model = (DefaultTableModel) OrderReceiveTable.getModel();
                Model.setColumnIdentifiers(colHeader);

                Object[] tableLines = br.lines().toArray();
                int i;
                
                for (i = 0; i < tableLines.length;i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(":");
                Model.addRow(dataRow);
            }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AdminPage.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (IOException ex) {
            Logger.getLogger(AdminPage.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public void LCKTable2() {

       File itemfile = new File("DeliveryDetail.txt");

        try {   
            if (itemfile.createNewFile()) {
                FileOutputStream opFile = new FileOutputStream(itemfile, false);
            } else {
                FileReader fr = new FileReader(itemfile);
                BufferedReader br = new BufferedReader(fr);
                String rec = br.readLine().trim();
                String[] colHeader = rec.split(":");

                DefaultTableModel Model = (DefaultTableModel) DeliveryTable.getModel();
                Model.setColumnIdentifiers(colHeader);

                Object[] tableLines = br.lines().toArray();
                int i;
                
                for (i = 0; i < tableLines.length;i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(":");
                Model.addRow(dataRow);
            }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AdminPage.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (IOException ex) {
            Logger.getLogger(AdminPage.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminODManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminODManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminODManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminODManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminODManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssignB;
    private javax.swing.JButton DeleteB;
    private javax.swing.JTable DeliveryTable;
    private javax.swing.JButton EditB;
    private javax.swing.JTextField IDF;
    private javax.swing.JTextField NameF;
    private javax.swing.JTable OrderReceiveTable;
    private javax.swing.JTextField PriceF;
    private javax.swing.JComboBox<String> StaffCombo;
    private javax.swing.JTextField StatusF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
